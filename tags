!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/0e5cfa3f/
DirectoryCrawler	lib/directory_crawler.ex	/^defmodule DocsetGenerator.DirectoryCrawler do$/;"	m
DocsetGenerator	lib/docset_generator.ex	/^defmodule DocsetGenerator do$/;"	m
DocsetGeneratorTest	test/docset_generator_test.exs	/^defmodule DocsetGeneratorTest do$/;"	m
Indexer	lib/indexer.exs	/^defmodule DocsetGenerator.Indexer do$/;"	m
LineAccumulator	lib/worker_parser.exs	/^defmodule DocsetGenerator.WorkerParser.LineAccumulator do$/;"	m
MixProject	mix.exs	/^defmodule DocsetGenerator.MixProject do$/;"	m
WorkerParser	lib/worker_parser.exs	/^defmodule DocsetGenerator.WorkerParser do$/;"	m
add_line_to	lib/worker_parser.exs	/^  def add_line_to(line, line_accumulator, caller) do$/;"	f
args_valid?	lib/docset_generator.ex	/^  defp args_valid?([dir | other_args]) do$/;"	f
collect_all_entries	lib/worker_parser.exs	/^  def collect_all_entries(filepath) do$/;"	f
deps	mix.exs	/^  defp deps do$/;"	f
greets the world	test/docset_generator_test.exs	/^  test "greets the world" do$/;"	t
handle_call	lib/indexer.exs	/^  def handle_call({:filepath, filepath}, state) do$/;"	f
handle_call	lib/indexer.exs	/^  def handle_call({:report_error, error, filepath}, state) do$/;"	f
handle_call	lib/indexer.exs	/^  def handle_call({:report_result, entry}, state) do$/;"	f
handle_info	lib/indexer.exs	/^  def handle_info({:directory_crawler_done}, state) do$/;"	f
handle_info	lib/indexer.exs	/^  def handle_info({:task_done}, state) do$/;"	f
index	lib/indexer.exs	/^  def index(root) do$/;"	f
init	lib/indexer.exs	/^  def init(root) do$/;"	f
main	lib/docset_generator.ex	/^  def main(args \\\\ []) do$/;"	f
parse_entries	lib/worker_parser.exs	/^  def parse_entries(filepath) do$/;"	f
project	mix.exs	/^  def project do$/;"	f
report_error	lib/indexer.exs	/^  def report_error(error, filepath) do$/;"	f
report_result	lib/indexer.exs	/^  def report_result(entry) do$/;"	f
schedule_work	lib/indexer.exs	/^  defp schedule_work(filepath, state) do$/;"	f
start_dir_search	lib/docset_generator.ex	/^  defp start_dir_search(dir) do$/;"	f
start_link	lib/worker_parser.exs	/^  def start_link() do$/;"	f
start_link	lib/worker_parser.exs	/^  def start_link(filepath) do$/;"	f
store_entry	lib/worker_parser.exs	/^  def store_entry(entry, filepath) do$/;"	f
